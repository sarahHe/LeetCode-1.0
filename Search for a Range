class Solution {
public:
    vector<int> searchRange(int A[], int n, int target) {
        int low = 0, high = n - 1, mid;
        vector<int> res;
        while (low <= high) {
            mid = (low + high) / 2;
            if (A[mid] < target) 
                low = mid + 1;
            else if (A[mid] > target)
                high = mid - 1;
            else {
                int i = mid - 1;
                while (i >= 0) {
                    if (A[i] != target)
                        break;
                    i--;
                }
                res.push_back(i + 1);
                i = mid + 1;
                while (i < n) {
                    if (A[i] != target)
                        break;
                    i++;
                }
                res.push_back(i - 1);
                break;
            }
        }
        if (res.empty()) {
            res.push_back(-1);
            res.push_back(-1);
        }
        return res;
    }
};
