class Solution {
public:
    void helper(vector<string> &res, string tmp, int left, int right, int n) {
        if (left < right || left > n)
            return;
        
        if (left == n && right == n)
            res.push_back(tmp);
        else {
            if (left < n)
                helper(res, tmp + "(", left + 1, right, n);
            if (right < n)
                helper(res, tmp + ")", left, right + 1, n);
        }
    }

    vector<string> generateParenthesis(int n) {
        vector<string> res;
        if (!n) return res;
        
        helper(res, "", 0, 0, n);
        return res;
    }
};

2015.2.16
3ms
void generate(int n, int l, int r, string tmp, vector<string> &res) {
    if (r == n)
        res.push_back(tmp);
    
    if (r == l && l < n)
        generate(n, l+1, r, tmp+"(", res);
    else if (r < l) {
        if (l < n)
            generate(n, l+1, r, tmp+"(", res);
        generate(n, l, r+1, tmp+")", res);
    }
}

vector<string> generateParenthesis(int n) {
    vector<string> res;
    generate(n, 0, 0, "", res);
    return res;
}
