class Solution {
public:
    int calculate(string c, int op1, int op2) {
        if (c == "+")
            return op1 + op2;
        else if (c == "-")
            return op1 - op2;
        else if (c == "*")
            return op1 * op2;
        else if (c == "/")
            return op1 / op2;
    }
    
    bool isNum(string c) {
        if (c != "+" && c != "-" && c != "*" && c != "/")
            return true;
        else
            return false;
    }
    
    int evalRPN(vector<string> &tokens) {
        if (tokens.size() == 1 && isNum(tokens[0]))
            return stoi(tokens[0]);
        else if (tokens.size() < 3)
            return 0;

        stack<int> s;
        int i = 0;
        while (i < (int)tokens.size()) {
            if (isNum(tokens[i]))
                s.push(stoi(tokens[i++]));
            else {
                int op2 = s.top();
                s.pop();
                int op1 = s.top();
                s.pop();
                s.push(calculate(tokens[i++], op1, op2));
            }
        }
        return s.top();
    }
};
