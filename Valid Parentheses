class Solution {
public:
    bool isValid(string s) {
        if (s.length() % 2 == 1)
            return false;
        
        set<pair<char, char> >  match;
        match.insert({'(', ')'});
        match.insert({'[', ']'});
        match.insert({'{', '}'});
        set<char>   start;
        
        int i = 0;
        stack<int> stack;
        while (i < s.length()) {
            if (s[i] == '(' || s[i] =='[' || s[i] == '{')
                stack.push(s[i]);
            else {
                if (stack.empty())  return false;
                
                if (match.find({stack.top(), s[i]}) != match.end())
                    stack.pop();
                else 
                    return false;
            }
            i++;
        }
        if (!stack.empty()) return false;
        return true;
    }
};
