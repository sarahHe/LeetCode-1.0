class Solution {
public:
    void findPath(vector<vector<int> > &v, int m, int n) {
        if (m == 0 || n == 0)
            return;
        if (v[m][n-1] == -1)
            findPath(v, m, n-1);
        if (v[m-1][n] == -1)
            findPath(v, m-1, n);
        v[m][n] = v[m][n-1] + v[m-1][n];
    }

    int uniquePaths(int m, int n) {
        vector<vector<int> > v(m, vector<int>(n, -1));
        for (int i = 0; i < n; i++)
            v[0][i] = 1;
        for (int i = 0; i < m; i++)
            v[i][0] = 1;
        
        findPath(v, m-1, n-1);
        return v[m-1][n-1];
    }
};
